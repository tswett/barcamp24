const fn mk_font(rows: [&str; 8 * 32]) -> [[u8; 6]; 32] {
    let mut column_bytes: [[u8; 6]; 32] = [[0; 6]; 32];

    let mut page = 0;
    while page < 4 {
        let mut char = 0;
        while char < 8 {
            let mut col = 0;
            while col < 6 {
                let mut column_byte = 0;

                let mut row = 0;
                while row < 8{
                    let index = page * 64 + row * 8 + char;

                    if rows[index].as_bytes()[col] != ' ' as u8 {
                        column_byte |= 1 << row;
                    }

                    row += 1;
                }

                column_bytes[page * 8 + char][col] = column_byte;

                col += 1;
            }

            char += 1;
        }

        page += 1;
    }

    column_bytes
}

pub const FONT: [[u8; 6]; 32] = mk_font([
    "      ", "  #   ", "####  ", " ###  ", "###   ", "##### ", "##### ", " ###  ",
    "      ", " # #  ", "#   # ", "#   # ", "#  #  ", "#     ", "#     ", "#   # ",
    "      ", "#   # ", "#   # ", "#     ", "#   # ", "#     ", "#     ", "#     ",
    "      ", "#   # ", "####  ", "#     ", "#   # ", "####  ", "####  ", "# ### ",
    "      ", "##### ", "#   # ", "#     ", "#   # ", "#     ", "#     ", "#   # ",
    "      ", "#   # ", "#   # ", "#   # ", "#  #  ", "#     ", "#     ", "#   # ",
    "      ", "#   # ", "####  ", " ###  ", "###   ", "##### ", "#     ", " ###  ",
    "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ",

    "#   # ", "##### ", "    # ", "#   # ", "#     ", "#   # ", "#   # ", " ###  ",
    "#   # ", "  #   ", "    # ", "#  #  ", "#     ", "## ## ", "#   # ", "#   # ",
    "#   # ", "  #   ", "    # ", "# #   ", "#     ", "# # # ", "##  # ", "#   # ",
    "##### ", "  #   ", "    # ", "##    ", "#     ", "#   # ", "# # # ", "#   # ",
    "#   # ", "  #   ", "    # ", "# #   ", "#     ", "#   # ", "#  ## ", "#   # ",
    "#   # ", "  #   ", "#   # ", "#  #  ", "#     ", "#   # ", "#   # ", "#   # ",
    "#   # ", "##### ", " ###  ", "#   # ", "##### ", "#   # ", "#   # ", " ###  ",
    "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ",

    "####  ", " ###  ", "####  ", " ###  ", "##### ", "#   # ", "#   # ", "#   # ",
    "#   # ", "#   # ", "#   # ", "#   # ", "  #   ", "#   # ", "#   # ", "#   # ",
    "#   # ", "#   # ", "#   # ", "#     ", "  #   ", "#   # ", "#   # ", "#   # ",
    "####  ", "#   # ", "####  ", " ###  ", "  #   ", "#   # ", "#   # ", "# # # ",
    "#     ", "# # # ", "# #   ", "    # ", "  #   ", "#   # ", "#   # ", "# # # ",
    "#     ", "#  #  ", "#  #  ", "#   # ", "  #   ", "#   # ", " # #  ", "## ## ",
    "#     ", " ## # ", "#   # ", " ###  ", "  #   ", " ###  ", "  #   ", "#   # ",
    "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ",

    "#   # ", "#   # ", "##### ", "      ", "      ", "      ", "      ", "      ",
    "#   # ", "#   # ", "    # ", "      ", "      ", "      ", "      ", "      ",
    " # #  ", " # #  ", "   #  ", "      ", "      ", "      ", "      ", "      ",
    "  #   ", "  #   ", "  #   ", "      ", "      ", "##### ", "      ", "      ",
    " # #  ", "  #   ", " #    ", "      ", "      ", "      ", "      ", "      ",
    "#   # ", "  #   ", "#     ", "      ", "      ", "      ", "      ", "      ",
    "#   # ", "  #   ", "##### ", "      ", "      ", "      ", "      ", "      ",
    "      ", "      ", "      ", "      ", "      ", "      ", "      ", "      ",
]);
